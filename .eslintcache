[{"/Users/ekphrasis/P_CDA/checklist_client/src/index.jsx":"1","/Users/ekphrasis/P_CDA/checklist_client/src/reportWebVitals.js":"2","/Users/ekphrasis/P_CDA/checklist_client/src/App.jsx":"3","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Homepage.jsx":"4","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButton.jsx":"5","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signup.jsx":"6","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signin.jsx":"7","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/WelcomeTopIcon.jsx":"8","/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/usePasswordToggle.jsx":"9","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButtonDivider.jsx":"10","/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/useForm.jsx":"11","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignup.jsx":"12","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignin.jsx":"13","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/auth.js":"14","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/index.js":"15","/Users/ekphrasis/P_CDA/checklist_client/src/actions/index.js":"16","/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PublicRoute.jsx":"17","/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PrivateRoute.jsx":"18","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Dashboard.jsx":"19","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Navbar.jsx":"20","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddItemButton.jsx":"21","/Users/ekphrasis/P_CDA/checklist_client/src/store.js":"22","/Users/ekphrasis/P_CDA/checklist_client/src/actions/auth.js":"23","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Alerts.jsx":"24","/Users/ekphrasis/P_CDA/checklist_client/src/actions/messages.js":"25","/Users/ekphrasis/P_CDA/checklist_client/src/actions/types.js":"26","/Users/ekphrasis/P_CDA/checklist_client/src/actions/tasks.js":"27","/Users/ekphrasis/P_CDA/checklist_client/src/actions/lists.js":"28","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditTaskModal.jsx":"29","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditListModal.jsx":"30","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditList.jsx":"31","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/lists.js":"32","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/tasks.js":"33","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/errors.js":"34","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/messages.js":"35","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/NavbarModal.jsx":"36","/Users/ekphrasis/P_CDA/checklist_client/src/components/EditList.jsx":"37","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddItem.jsx":"38","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/List.jsx":"39","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Task.jsx":"40","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddTaskButton.jsx":"41","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddTask.jsx":"42","/Users/ekphrasis/P_CDA/checklist_client/src/components/EditTask.jsx":"43","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditTask.jsx":"44"},{"size":521,"mtime":1613951173395,"results":"45","hashOfConfig":"46"},{"size":364,"mtime":1611920451669,"results":"47","hashOfConfig":"46"},{"size":1594,"mtime":1613951173357,"results":"48","hashOfConfig":"46"},{"size":1168,"mtime":1612273413525,"results":"49","hashOfConfig":"46"},{"size":447,"mtime":1612287288604,"results":"50","hashOfConfig":"46"},{"size":5031,"mtime":1614120105020,"results":"51","hashOfConfig":"46"},{"size":3614,"mtime":1615299999083,"results":"52","hashOfConfig":"46"},{"size":473,"mtime":1612189782008,"results":"53","hashOfConfig":"46"},{"size":524,"mtime":1612192842042,"results":"54","hashOfConfig":"46"},{"size":326,"mtime":1612200197247,"results":"55","hashOfConfig":"46"},{"size":919,"mtime":1614974418606,"results":"56","hashOfConfig":"46"},{"size":1106,"mtime":1612201061702,"results":"57","hashOfConfig":"46"},{"size":686,"mtime":1612287257443,"results":"58","hashOfConfig":"46"},{"size":1596,"mtime":1614007912426,"results":"59","hashOfConfig":"46"},{"size":312,"mtime":1613951173405,"results":"60","hashOfConfig":"46"},{"size":418,"mtime":1613951173361,"results":"61","hashOfConfig":"46"},{"size":532,"mtime":1612534452330,"results":"62","hashOfConfig":"63"},{"size":764,"mtime":1614007440311,"results":"64","hashOfConfig":"46"},{"size":4738,"mtime":1614966939798,"results":"65","hashOfConfig":"46"},{"size":1530,"mtime":1613951173385,"results":"66","hashOfConfig":"46"},{"size":3961,"mtime":1615061480310,"results":"67","hashOfConfig":"46"},{"size":383,"mtime":1613951173411,"results":"68","hashOfConfig":"46"},{"size":3062,"mtime":1615312382795,"results":"69","hashOfConfig":"46"},{"size":518,"mtime":1613951173378,"results":"70","hashOfConfig":"46"},{"size":277,"mtime":1613951173364,"results":"71","hashOfConfig":"46"},{"size":1071,"mtime":1615309529182,"results":"72","hashOfConfig":"46"},{"size":3205,"mtime":1615312339800,"results":"73","hashOfConfig":"46"},{"size":3465,"mtime":1614982712281,"results":"74","hashOfConfig":"46"},{"size":1718,"mtime":1615228205475,"results":"75","hashOfConfig":"46"},{"size":1381,"mtime":1614871700220,"results":"76","hashOfConfig":"46"},{"size":319,"mtime":1614706321061,"results":"77","hashOfConfig":"46"},{"size":2546,"mtime":1615312373001,"results":"78","hashOfConfig":"46"},{"size":1095,"mtime":1615312449675,"results":"79","hashOfConfig":"46"},{"size":359,"mtime":1613951173403,"results":"80","hashOfConfig":"46"},{"size":349,"mtime":1613951173408,"results":"81","hashOfConfig":"46"},{"size":948,"mtime":1613951173386,"results":"82","hashOfConfig":"46"},{"size":1005,"mtime":1614958143778,"results":"83","hashOfConfig":"46"},{"size":318,"mtime":1614705876412,"results":"84","hashOfConfig":"46"},{"size":3795,"mtime":1615307488979,"results":"85","hashOfConfig":"46"},{"size":1203,"mtime":1615228124372,"results":"86","hashOfConfig":"46"},{"size":4610,"mtime":1613951173373,"results":"87","hashOfConfig":"46"},{"size":590,"mtime":1613951173391,"results":"88","hashOfConfig":"46"},{"size":3440,"mtime":1615301125176,"results":"89","hashOfConfig":"46"},{"size":752,"mtime":1614169343372,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"yhqtet",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7zg7up",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/ekphrasis/P_CDA/checklist_client/src/index.jsx",[],["190","191","192","193","194","195","196"],"/Users/ekphrasis/P_CDA/checklist_client/src/reportWebVitals.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/App.jsx",["197"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { loaduser } from './actions/index';\n\nimport Homepage from './pages/Homepage';\nimport Signup from './pages/Signup';\nimport Signin from './pages/Signin';\nimport Dashboard from './pages/Dashboard';\n// import PublicRoute from './components/common/PublicRoute';\n// import PrivateRoute from './components/common/PrivateRoute';\n\nimport './styles/App.scss';\n\nconst API = process.env.REACT_APP_DEV_API_URL;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const fetchUser = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = await axios.get(`${API}user/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      dispatch(loaduser(user));\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route path=\"/board\" component={Dashboard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Homepage.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButton.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signup.jsx",["198"],"/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\nimport usePasswordToggle from '../components/customedhooks/usePasswordToggle';\nimport useForm from '../components/customedhooks/useForm';\nimport validate from '../components/validators/validateSignup';\nimport WelcomeTopIcon from '../components/layout/WelcomeTopIcon';\nimport SignButton from '../components/buttons/SignButton';\nimport SignButtonDivider from '../components/buttons/SignButtonDivider';\n\nconst Signup = ({ signup, auth: { isAuthenticated, token } }) => {\n  const [PasswordInputType, ToggleIcon] = usePasswordToggle();\n  const [toHome, setToHome] = useState(false);\n\n  const initialState = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n  };\n\n  const { handleChange, handleSubmit, values, setValues, errors } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  async function submit() {\n    signup(values, setToHome);\n  }\n\n  // if (isAuthenticated) {\n  //   return <Redirect to=\"/signin\" />;\n  // }\n  return (\n    <>\n      {toHome ? <Redirect to=\"/signin\" /> : null}\n      <div className=\"welcome__container\">\n        <div className=\"welcome__container-leftpanel\">\n          <WelcomeTopIcon />\n          <div className=\"welcome__container-leftpanel-bottomhalf\">\n            <form\n              onSubmit={handleSubmit}\n              noValidate\n              className=\"form__container\"\n            >\n              <h2 className=\"form__container-title\">Create an account</h2>\n              <label htmlFor=\"firstname\" className=\"form__container-label\">\n                Firstname\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"firstname\"\n                    type=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"firstname\"\n                    value={values.firstname}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.firstname && (\n                  <p className=\"error\">{errors.firstname}</p>\n                )}\n              </label>\n              <label htmlFor=\"lastname\" className=\"form__container-label\">\n                Lastname\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"lastname\"\n                    type=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"lastname\"\n                    value={values.lastname}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.lastname && <p className=\"error\">{errors.lastname}</p>}\n              </label>\n              <label htmlFor=\"email\" className=\"form__container-label\">\n                Email\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"name@domain.com\"\n                    value={values.email}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.email && <p className=\"error\">{errors.email}</p>}\n              </label>\n              <label htmlFor=\"password\" className=\"form__container-label\">\n                Password\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"password\"\n                    type={PasswordInputType}\n                    name=\"password\"\n                    placeholder=\"at least 8 characters\"\n                    value={values.password}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                  <span className=\"password-toggle-icon\">{ToggleIcon}</span>\n                </div>\n                {errors.password && <p className=\"error\">{errors.password}</p>}\n              </label>\n              <span className=\"welcome__container-leftpanel-bottomhalf-buttons\">\n                <SignButton type=\"submit\" value=\"signup\">\n                  Sign up\n                </SignButton>\n                <SignButtonDivider />\n                {/* <a href=\"/signin\" className=\"signbutton__link\"> */}\n                <SignButton type=\"button\" value=\"signin\">\n                  Sign in\n                </SignButton>\n                {/* </a> */}\n              </span>\n            </form>\n          </div>\n        </div>\n        <div className=\"welcome__container-rightpanel\" />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signin.jsx",["199","200"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/WelcomeTopIcon.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/usePasswordToggle.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButtonDivider.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/useForm.jsx",["201"],"import { useState, useEffect } from 'react';\n\nconst useForm = (initialState, validate, callback) => {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const clearState = () => {\n    setValues({ ...initialState });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValues({\n      ...values,\n    });\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors, isSubmitting]);\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    setValues,\n    errors,\n    clearState,\n  };\n};\n\nexport default useForm;\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignup.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignin.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/auth.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/index.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/index.js",[],["202","203","204","205","206","207","208"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PublicRoute.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PrivateRoute.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/pages/Dashboard.jsx",["209","210"],"/* eslint-disable no-shadow */\n/* eslint-disable no-constant-condition */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { getLists, getListsTasks } from '../actions/lists';\nimport { getTasks } from '../actions/tasks';\n\n// import useForm from '../components/customedhooks/useForm';\n// import validate from '../components/validators/validateEditList';\n\nimport List from '../components/layout/List';\nimport Navbar from '../components/layout/Navbar';\nimport AddItemButton from '../components/buttons/AddItemButton';\n\nconst Dashboard = ({\n  getLists,\n  getListsTasks,\n  getTasks,\n  auth,\n  onlyLists,\n  lists,\n  tasks,\n}) => {\n  console.log('authenticated user', auth.user.id);\n  console.log('tasks top', tasks);\n  console.log('lists top', lists);\n  // console.log('tasks', tasks);\n\n  useEffect(() => {\n    getLists(auth.user.id);\n    getListsTasks(auth.user.id);\n    getTasks();\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"dashboard__container\">\n        <h2>\n          {auth.user.firstname}\n          &apos;s Board\n        </h2>\n        <div className=\"dashboard__container-lists\">\n          {lists.map((list) => (\n            <List key={list.id} list={list} />\n          ))}\n          <div className=\"dashboard__container-lists-addlist-inside\">\n            <AddItemButton text=\"list\">list</AddItemButton>\n          </div>\n        </div>\n        <div className=\"dashboard__container-lists-addlist-outside\">\n          <AddItemButton text=\"list\">list</AddItemButton>\n        </div>\n      </div>\n    </>\n  );\n};\n\n// const List = ({ list, editList }) => {\n//   const { id, name } = list;\n//   const modalRef = useRef();\n\n//   const openModal = () => {\n//     modalRef.current.openModal();\n//   };\n\n//   const [toggle, setToggle] = useState(true);\n//   // const [text, setText] = useState(task.name);\n//   // useEffect(() => {\n//   //   getTasks();\n//   //   console.log('inside', list.id);\n//   // }, []);\n//   // console.log('kiwi', list.id);\n\n//   function toggleInput() {\n//     setToggle(false);\n//   }\n\n//   const initialState = {\n//     name: '' ? '' : name,\n//   };\n\n//   const { handleChange, handleSubmit, values, setValues, errors } = useForm(\n//     initialState,\n//     validate,\n//     submitEditList\n//   );\n\n//   async function submitEditList() {\n//     editList({ list_id: list.id, name: values.name });\n//   }\n\n//   console.log('list', list);\n//   return (\n//     <>\n//       <div className=\"dashboard__container-lists-list\">\n//         <div className=\"dashboard__container-lists-list-header\">\n//           <h3>{list.name}</h3>\n//           {/* {toggle ? (\n//             <h3 onDoubleClick={toggleInput}>{list.name}</h3>\n//           ) : (\n//             <form className=\"edit-listname-container-form\">\n//               <input\n//                 type=\"text\"\n//                 id=\"name\"\n//                 name=\"name\"\n//                 value={values.name || ''}\n//                 onChange={handleChange}\n//                 onBlur={handleSubmit}\n//                 onKeyDown={handleSubmit}\n//               />\n//             </form>\n//           )}\n//           {errors.name && <p className=\"error\">{errors.name}</p>} */}\n//           <FontAwesomeIcon\n//             icon={faEllipsisH}\n//             nature=\"ellipse\"\n//             onMouseDown={openModal}\n//           />\n//           <EditListModal ref={modalRef} listId={list.id} />\n//         </div>\n//         {list.Tasks.map((task, i) => (\n//           <Task key={i} task={task} />\n//         ))}\n//         <AddItemButton text=\"task\">task</AddItemButton>\n//       </div>\n//     </>\n//   );\n// };\n\n// const Task = (Tasks) => {\n//   const modalRef = useRef();\n//   console.log('ya quoi dans task', Tasks);\n\n//   const openModal = () => {\n//     modalRef.current.openModal();\n//   };\n//   return (\n//     <div className=\"dashboard__container-lists-list-card\">\n//       <div className=\"dashboard__container-lists-list-card-header\">\n//         <h3>{Tasks.task.name}</h3>\n//         <FontAwesomeIcon\n//           icon={faPenNib}\n//           nature=\"pen\"\n//           onClick={openModal}\n//           className=\"dashboard__container-lists-list-card-header-edit\"\n//         />\n//         <EditTaskModal ref={modalRef} />\n//       </div>\n//       <div className=\"dashboard__container-lists-list-card-description\">\n//         <p>{Tasks.task.description}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  // tasks: state.tasks.tasks,\n  lists: state.lists.lists,\n  onlyLists: state.lists.onlyLists,\n});\n\nexport default connect(mapStateToProps, { getLists, getListsTasks, getTasks })(\n  Dashboard\n);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Navbar.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddItemButton.jsx",["211","212"],"/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Textarea from 'react-textarea-autosize';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport useForm from '../customedhooks/useForm';\nimport validate from '../validators/validateAddItem';\nimport { addList } from '../../actions/lists';\nimport { addTask } from '../../actions/tasks';\n\nconst AddItemButton = ({\n  listId,\n  list,\n  text,\n  children,\n  addList,\n  addTask,\n  auth,\n  messages,\n}) => {\n  const [formOpen, setFormOpen] = useState(false);\n\n  console.log('eeasy', messages);\n\n  const open = () => {\n    setFormOpen(true);\n  };\n\n  const close = () => {\n    setFormOpen(false);\n  };\n\n  const buttonTextOpacity = text === 'list' ? 1 : 0.5;\n  const buttonTextColor = text === 'list' ? 'white' : 'inherit';\n  const buttonTextBackground = text === 'list' ? '#eeeeee' : 'inherit';\n\n  const placeholder =\n    text === 'list' ? 'Enter new list name' : 'Enter new task name';\n\n  const buttonTitle = text === 'list' ? 'Add List' : 'Add Task';\n\n  // const addListP = addList({ user_id: auth.user.id, name: values.name });\n\n  // const addTaskP = addTask({\n  //   user_id: auth.user.id,\n  //   name: values.name,\n  //   description: 'Description à compléter',\n  //   priority_id: 3,\n  //   list_id: listId,\n  // });\n\n  const initialState = {\n    name: '',\n  };\n\n  const { handleChange, handleSubmit, values, errors, clearState } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  const valueButton = text === 'list' ? 'addList' : 'addTask';\n\n  async function submit() {\n    {\n      (text === 'list'\n        ? addList({ user_id: auth.user.id, name: values.name })\n        : addTask(\n            {\n              user_id: auth.user.id,\n              name: values.name,\n              description: 'Description à compléter',\n              priority_id: 3,\n              list_id: listId,\n            },\n            list\n          )\n      ).then(clearState);\n    }\n  }\n\n  // function refreshPage() {\n  //   window.location.reload();\n  // }\n\n  return (\n    <div\n      style={{\n        opacity: buttonTextOpacity,\n        color: buttonTextColor,\n        background: buttonTextBackground,\n      }}\n      className=\"add-item-background\"\n    >\n      <div className=\"add-item-container\">\n        {formOpen ? (\n          <form\n            onSubmit={handleSubmit}\n            noValidate\n            className=\"add-item-container-form\"\n          >\n            <Textarea\n              placeholder={placeholder}\n              autoFocus\n              className=\"add-item-container-form-input\"\n              onChange={handleChange}\n              // onBlur={close}\n              value={values.name || ''}\n              name=\"name\"\n              id=\"id\"\n              type=\"text\"\n            />\n            {errors.name && <p className=\"error\">{errors.name}</p>}\n            <button\n              type=\"submit\"\n              // value=\"addList\"\n              value={valueButton}\n              className=\"add-item-form-button\"\n              // onClick={() => refreshPage()}\n            >\n              {buttonTitle}\n            </button>\n            <FontAwesomeIcon\n              className=\"add-item-container-form-cross\"\n              icon={faTimes}\n              onMouseDown={close}\n            />\n          </form>\n        ) : (\n          <div className=\"add-item-button\">\n            <button className=\"add-item-buttons\" type=\"button\" onClick={open}>\n              <FontAwesomeIcon icon={faPlus} />\n              &nbsp; Add a new&nbsp;\n              {children}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  messages: state.messages.state,\n});\n\nexport default connect(mapStateToProps, { addList, addTask })(AddItemButton);\n","/Users/ekphrasis/P_CDA/checklist_client/src/store.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/auth.js",["213"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Alerts.jsx",["214"],"import React, { useEffect } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\n\nconst Alerts = ({ error, alert, message }) => {\n  console.log('titit', error);\n  if (error) {\n    if (error.msg) alert.error('There is an error');\n  }\n  // useEffect(() => {\n  //   alert.show('Alert Works');\n  // }, []);\n  return <></>;\n};\nconst mapStateToProps = (state) => ({\n  error: state.errors,\n  message: state.messages,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));\n","/Users/ekphrasis/P_CDA/checklist_client/src/actions/messages.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/types.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/tasks.js",["215","216"],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/lists.js",["217","218"],"/* eslint-disable camelcase */\nimport axios from 'axios';\nimport { createMessage, returnErrors } from './messages';\nimport { tokenConfig } from './auth';\n\nimport {\n  GET_LISTS,\n  GET_LISTSTASKS,\n  ADD_LIST,\n  EDIT_LIST,\n  DELETE_LIST,\n  CLEAR_LISTS,\n  POST_ERROR,\n} from './types';\n\nconst API = process.env.REACT_APP_DEV_API_URL;\n\n// GET ALL THE LISTS OF AN USER\nexport const getLists = (userId) => async (dispatch, getState) => {\n  axios\n    .post(`${API}onlylists`, { user_id: userId }, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: GET_LISTS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\n// GET ALL THE LISTS + CORRESPONDING TASKS OF AN USER\nexport const getListsTasks = (userId) => async (dispatch, getState) => {\n  console.log('your eyes', userId);\n\n  // const body = JSON.stringify(userId);\n  // console.log('do you believe it', body);\n  axios\n    .post(`${API}liststasks`, { user_id: userId }, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: GET_LISTSTASKS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\n// ADD LIST\nexport const addList = (list) => async (dispatch, getState) => {\n  // console.log('data from addlist form', list);\n\n  // const { user_id, name, Tasks } = list;\n\n  // console.log('userId', Tasks);\n\n  // Request Body\n  const body = JSON.stringify(list);\n  // console.log('data from addlist into body', body);\n\n  return axios\n    .post(`${API}lists`, body, tokenConfig(getState))\n    .then((res) => {\n      // console.log('dispatch addList', res.data);\n      const newList = { ...res.data, Tasks: [] };\n      // console.log('tututut', newList);\n      dispatch(createMessage({ addList: 'List Added' }));\n      dispatch({\n        type: ADD_LIST,\n        payload: newList,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// EDIT LIST\nexport const editList = (list) => (dispatch, getState) => {\n  console.log('data list from edit list form', list);\n\n  // Request Body\n  const body = JSON.stringify(list);\n  console.log('data from edit list form into body', body);\n\n  axios\n    .patch(`${API}lists`, body, tokenConfig(getState))\n    .then((res) => {\n      console.log('dispatch editList', res.data);\n      const editedList = { ...res.data, Tasks: [] };\n      console.log('tututut', editedList);\n      dispatch(createMessage({ editList: 'List Updated' }));\n      dispatch({\n        type: EDIT_LIST,\n        payload: editedList,\n      });\n    })\n    .catch((err) =>\n      // dispatch(returnErrors(err.response.data, err.response.status))\n      console.log('editList', err)\n    );\n};\n\n// DELETE LIST\nexport const deleteList = (id) => (dispatch, getState) => {\n  const { token } = getState().auth;\n  console.log('rdv de la list id', id);\n\n  axios\n    .delete(`${API}lists`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data: { id },\n    })\n    .then((res) => {\n      console.log('dispatch deleteList', res.data);\n      dispatch(createMessage({ deleteList: 'List Deleted' }));\n      dispatch({\n        type: DELETE_LIST,\n        payload: id,\n      });\n    })\n    .catch((err) =>\n      // dispatch(returnErrors(err.response.data, err.response.status))\n      console.log('deleteList', err)\n    );\n};\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditTaskModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditListModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditList.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/lists.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/tasks.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/errors.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/messages.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/NavbarModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/EditList.jsx",["219"],"/* eslint-disable consistent-return */\n/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { deleteList } from '../actions/lists';\n\nconst EditListModal = ({ deleteList, listId }) => {\n  console.log('tatayuyu', listId);\n\n  // const history = useHistory();\n\n  async function submit() {\n    // deleteList(listId, history);\n    deleteList(listId);\n  }\n\n  return (\n    <>\n      <div className=\"editlist-modal-box\">\n        <FontAwesomeIcon icon={faTrashAlt} />\n        <p>Do you really want to delete the list?</p>\n        <button type=\"submit\" className=\"delete-item-button\" onClick={submit}>\n          Delete the list\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists.lists,\n});\n\nexport default connect(mapStateToProps, { deleteList })(EditListModal);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddItem.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/List.jsx",["220","221"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Task.jsx",["222"],"/* eslint-disable no-shadow */\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenNib } from '@fortawesome/free-solid-svg-icons';\n\nimport EditTaskModal from './EditTaskModal';\n\nconst Task = (Tasks) => {\n  const modalRef = useRef();\n  console.log('ya quoi dans Tasks', Tasks);\n\n  const openModal = () => {\n    modalRef.current.openModal();\n  };\n  return (\n    <div className=\"dashboard__container-lists-list-card\">\n      <div className=\"dashboard__container-lists-list-card-header\">\n        <h3>{Tasks.task.name}</h3>\n        <FontAwesomeIcon\n          icon={faPenNib}\n          nature=\"pen\"\n          onClick={openModal}\n          className=\"dashboard__container-lists-list-card-header-edit\"\n        />\n        <EditTaskModal ref={modalRef} task={Tasks} />\n      </div>\n      <div className=\"dashboard__container-lists-list-card-description\">\n        <p>{Tasks.task.description}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  // tasks: state.tasks.tasks,\n  lists: state.lists.lists,\n});\n\nexport default connect(mapStateToProps)(Task);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddTaskButton.jsx",["223"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddTask.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/EditTask.jsx",["224"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditTask.jsx",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":17,"column":8,"nodeType":"241","messageId":"242","endLine":17,"endColumn":14},{"ruleId":"239","severity":1,"message":"243","line":25,"column":47,"nodeType":"241","messageId":"242","endLine":25,"endColumn":56},{"ruleId":"239","severity":1,"message":"244","line":2,"column":17,"nodeType":"241","messageId":"242","endLine":2,"endColumn":25},{"ruleId":"239","severity":1,"message":"245","line":2,"column":27,"nodeType":"241","messageId":"242","endLine":2,"endColumn":33},{"ruleId":"246","severity":1,"message":"247","line":34,"column":6,"nodeType":"248","endLine":34,"endColumn":28,"suggestions":"249"},{"ruleId":"225","replacedBy":"250"},{"ruleId":"227","replacedBy":"251"},{"ruleId":"229","replacedBy":"252"},{"ruleId":"231","replacedBy":"253"},{"ruleId":"233","replacedBy":"254"},{"ruleId":"235","replacedBy":"255"},{"ruleId":"237","replacedBy":"256"},{"ruleId":"239","severity":1,"message":"244","line":4,"column":17,"nodeType":"241","messageId":"242","endLine":4,"endColumn":25},{"ruleId":"246","severity":1,"message":"257","line":36,"column":6,"nodeType":"248","endLine":36,"endColumn":8,"suggestions":"258"},{"ruleId":"239","severity":1,"message":"259","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":68,"column":5,"nodeType":"262","messageId":"263","endLine":82,"endColumn":6},{"ruleId":"239","severity":1,"message":"264","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":13},{"ruleId":"239","severity":1,"message":"265","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"266","line":14,"column":3,"nodeType":"241","messageId":"242","endLine":14,"endColumn":14},{"ruleId":"239","severity":1,"message":"267","line":15,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":13},{"ruleId":"239","severity":1,"message":"268","line":12,"column":3,"nodeType":"241","messageId":"242","endLine":12,"endColumn":14},{"ruleId":"239","severity":1,"message":"267","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":13,"endColumn":13},{"ruleId":"239","severity":1,"message":"244","line":3,"column":17,"nodeType":"241","messageId":"242","endLine":3,"endColumn":25},{"ruleId":"239","severity":1,"message":"259","line":6,"column":10,"nodeType":"241","messageId":"242","endLine":6,"endColumn":18},{"ruleId":"246","severity":1,"message":"269","line":70,"column":6,"nodeType":"248","endLine":70,"endColumn":8,"suggestions":"270"},{"ruleId":"239","severity":1,"message":"244","line":2,"column":17,"nodeType":"241","messageId":"242","endLine":2,"endColumn":25},{"ruleId":"239","severity":1,"message":"259","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":18},{"ruleId":"239","severity":1,"message":"244","line":4,"column":17,"nodeType":"241","messageId":"242","endLine":4,"endColumn":25},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"lines-around-directive",["273"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Alerts' is defined but never used.","Identifier","unusedVar","'setValues' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["274"],["271"],["272"],["273"],[],[],[],[],"React Hook useEffect has missing dependencies: 'auth.user.id', 'getLists', 'getListsTasks', and 'getTasks'. Either include them or remove the dependency array. If 'getLists' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"'Redirect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'GET_ERRORS' is defined but never used.","'useEffect' is defined but never used.","'CLEAR_TASKS' is defined but never used.","'POST_ERROR' is defined but never used.","'CLEAR_LISTS' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.user.id' and 'getListsTasks'. Either include them or remove the dependency array. If 'getListsTasks' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"283","text":"284"},"Update the dependencies array to be: [auth.user.id, getLists, getListsTasks, getTasks]",{"range":"285","text":"286"},"Update the dependencies array to be: [auth.user.id, getListsTasks]",{"range":"287","text":"288"},[758,780],"[callback, errors, isSubmitting]",[980,982],"[auth.user.id, getLists, getListsTasks, getTasks]",[1927,1929],"[auth.user.id, getListsTasks]"]
[{"/Users/ekphrasis/P_CDA/checklist_client/src/index.jsx":"1","/Users/ekphrasis/P_CDA/checklist_client/src/reportWebVitals.js":"2","/Users/ekphrasis/P_CDA/checklist_client/src/App.jsx":"3","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Homepage.jsx":"4","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButton.jsx":"5","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signup.jsx":"6","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signin.jsx":"7","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/WelcomeTopIcon.jsx":"8","/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/usePasswordToggle.jsx":"9","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButtonDivider.jsx":"10","/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/useForm.jsx":"11","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignup.jsx":"12","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignin.jsx":"13","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/auth.js":"14","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/index.js":"15","/Users/ekphrasis/P_CDA/checklist_client/src/actions/index.js":"16","/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PublicRoute.jsx":"17","/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PrivateRoute.jsx":"18","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Dashboard.jsx":"19","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Navbar.jsx":"20","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddItemButton.jsx":"21","/Users/ekphrasis/P_CDA/checklist_client/src/store.js":"22","/Users/ekphrasis/P_CDA/checklist_client/src/actions/auth.js":"23","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Alerts.jsx":"24","/Users/ekphrasis/P_CDA/checklist_client/src/actions/messages.js":"25","/Users/ekphrasis/P_CDA/checklist_client/src/actions/types.js":"26","/Users/ekphrasis/P_CDA/checklist_client/src/actions/tasks.js":"27","/Users/ekphrasis/P_CDA/checklist_client/src/actions/lists.js":"28","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditTaskModal.jsx":"29","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditListModal.jsx":"30","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditList.jsx":"31","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/lists.js":"32","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/tasks.js":"33","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/errors.js":"34","/Users/ekphrasis/P_CDA/checklist_client/src/reducers/messages.js":"35","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/NavbarModal.jsx":"36","/Users/ekphrasis/P_CDA/checklist_client/src/components/EditList.jsx":"37","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddItem.jsx":"38","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/List.jsx":"39","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Task.jsx":"40","/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddTaskButton.jsx":"41","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddTask.jsx":"42","/Users/ekphrasis/P_CDA/checklist_client/src/components/EditTask.jsx":"43","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditTask.jsx":"44"},{"size":521,"mtime":1613951173395,"results":"45","hashOfConfig":"46"},{"size":364,"mtime":1611920451669,"results":"47","hashOfConfig":"46"},{"size":1480,"mtime":1615313315922,"results":"48","hashOfConfig":"46"},{"size":1168,"mtime":1612273413525,"results":"49","hashOfConfig":"46"},{"size":447,"mtime":1612287288604,"results":"50","hashOfConfig":"46"},{"size":5031,"mtime":1614120105020,"results":"51","hashOfConfig":"46"},{"size":3614,"mtime":1615312739155,"results":"52","hashOfConfig":"46"},{"size":473,"mtime":1612189782008,"results":"53","hashOfConfig":"46"},{"size":524,"mtime":1612192842042,"results":"54","hashOfConfig":"46"},{"size":326,"mtime":1612200197247,"results":"55","hashOfConfig":"46"},{"size":919,"mtime":1615312739146,"results":"56","hashOfConfig":"46"},{"size":1106,"mtime":1612201061702,"results":"57","hashOfConfig":"46"},{"size":686,"mtime":1612287257443,"results":"58","hashOfConfig":"46"},{"size":1596,"mtime":1614007912426,"results":"59","hashOfConfig":"46"},{"size":312,"mtime":1613951173405,"results":"60","hashOfConfig":"46"},{"size":418,"mtime":1613951173361,"results":"61","hashOfConfig":"46"},{"size":532,"mtime":1612534452330,"results":"62","hashOfConfig":"63"},{"size":764,"mtime":1614007440311,"results":"64","hashOfConfig":"46"},{"size":6418,"mtime":1615472514864,"results":"65","hashOfConfig":"46"},{"size":1530,"mtime":1613951173385,"results":"66","hashOfConfig":"46"},{"size":3961,"mtime":1615312739145,"results":"67","hashOfConfig":"46"},{"size":383,"mtime":1613951173411,"results":"68","hashOfConfig":"46"},{"size":3065,"mtime":1615457770366,"results":"69","hashOfConfig":"46"},{"size":518,"mtime":1613951173378,"results":"70","hashOfConfig":"46"},{"size":277,"mtime":1613951173364,"results":"71","hashOfConfig":"46"},{"size":1132,"mtime":1615389010649,"results":"72","hashOfConfig":"46"},{"size":3205,"mtime":1615312739140,"results":"73","hashOfConfig":"46"},{"size":4129,"mtime":1615474359474,"results":"74","hashOfConfig":"46"},{"size":1721,"mtime":1615455845739,"results":"75","hashOfConfig":"46"},{"size":1384,"mtime":1615458803883,"results":"76","hashOfConfig":"46"},{"size":319,"mtime":1614706321061,"results":"77","hashOfConfig":"46"},{"size":4317,"mtime":1615476854071,"results":"78","hashOfConfig":"46"},{"size":1095,"mtime":1615312739158,"results":"79","hashOfConfig":"46"},{"size":359,"mtime":1613951173403,"results":"80","hashOfConfig":"46"},{"size":349,"mtime":1613951173408,"results":"81","hashOfConfig":"46"},{"size":948,"mtime":1613951173386,"results":"82","hashOfConfig":"46"},{"size":1005,"mtime":1615312739143,"results":"83","hashOfConfig":"46"},{"size":318,"mtime":1614705876412,"results":"84","hashOfConfig":"46"},{"size":4879,"mtime":1615459594726,"results":"85","hashOfConfig":"46"},{"size":1842,"mtime":1615459605965,"results":"86","hashOfConfig":"46"},{"size":4610,"mtime":1613951173373,"results":"87","hashOfConfig":"46"},{"size":590,"mtime":1613951173391,"results":"88","hashOfConfig":"46"},{"size":3440,"mtime":1615312739144,"results":"89","hashOfConfig":"46"},{"size":752,"mtime":1615312739152,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"yhqtet",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7zg7up",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"93"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/ekphrasis/P_CDA/checklist_client/src/index.jsx",[],["190","191","192","193","194","195","196"],"/Users/ekphrasis/P_CDA/checklist_client/src/reportWebVitals.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/App.jsx",["197"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import { auth } from './actions/index';\nimport { loadUser } from './actions/auth';\n\nimport Homepage from './pages/Homepage';\nimport Signup from './pages/Signup';\nimport Signin from './pages/Signin';\nimport Dashboard from './pages/Dashboard';\nimport Alerts from './components/layout/Alerts';\n// import PublicRoute from './components/common/PublicRoute';\nimport PrivateRoute from './components/common/PrivateRoute';\n\nimport './styles/App.scss';\n\n// const API = process.env.REACT_APP_DEV_API_URL;\n\nconst alertOptions = {\n  timeout: 3000,\n  position: 'top center',\n};\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <AlertProvider template={AlertTemplate} {...alertOptions}>\n        <Router>\n          {/* <Alerts /> */}\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/signin\" component={Signin} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </Router>\n      </AlertProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Homepage.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButton.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signup.jsx",["198"],"/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\nimport usePasswordToggle from '../components/customedhooks/usePasswordToggle';\nimport useForm from '../components/customedhooks/useForm';\nimport validate from '../components/validators/validateSignup';\nimport WelcomeTopIcon from '../components/layout/WelcomeTopIcon';\nimport SignButton from '../components/buttons/SignButton';\nimport SignButtonDivider from '../components/buttons/SignButtonDivider';\n\nconst Signup = ({ signup, auth: { isAuthenticated, token } }) => {\n  const [PasswordInputType, ToggleIcon] = usePasswordToggle();\n  const [toHome, setToHome] = useState(false);\n\n  const initialState = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n  };\n\n  const { handleChange, handleSubmit, values, setValues, errors } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  async function submit() {\n    signup(values, setToHome);\n  }\n\n  // if (isAuthenticated) {\n  //   return <Redirect to=\"/signin\" />;\n  // }\n  return (\n    <>\n      {toHome ? <Redirect to=\"/signin\" /> : null}\n      <div className=\"welcome__container\">\n        <div className=\"welcome__container-leftpanel\">\n          <WelcomeTopIcon />\n          <div className=\"welcome__container-leftpanel-bottomhalf\">\n            <form\n              onSubmit={handleSubmit}\n              noValidate\n              className=\"form__container\"\n            >\n              <h2 className=\"form__container-title\">Create an account</h2>\n              <label htmlFor=\"firstname\" className=\"form__container-label\">\n                Firstname\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"firstname\"\n                    type=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"firstname\"\n                    value={values.firstname}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.firstname && (\n                  <p className=\"error\">{errors.firstname}</p>\n                )}\n              </label>\n              <label htmlFor=\"lastname\" className=\"form__container-label\">\n                Lastname\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"lastname\"\n                    type=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"lastname\"\n                    value={values.lastname}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.lastname && <p className=\"error\">{errors.lastname}</p>}\n              </label>\n              <label htmlFor=\"email\" className=\"form__container-label\">\n                Email\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"name@domain.com\"\n                    value={values.email}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.email && <p className=\"error\">{errors.email}</p>}\n              </label>\n              <label htmlFor=\"password\" className=\"form__container-label\">\n                Password\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"password\"\n                    type={PasswordInputType}\n                    name=\"password\"\n                    placeholder=\"at least 8 characters\"\n                    value={values.password}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                  <span className=\"password-toggle-icon\">{ToggleIcon}</span>\n                </div>\n                {errors.password && <p className=\"error\">{errors.password}</p>}\n              </label>\n              <span className=\"welcome__container-leftpanel-bottomhalf-buttons\">\n                <SignButton type=\"submit\" value=\"signup\">\n                  Sign up\n                </SignButton>\n                <SignButtonDivider />\n                {/* <a href=\"/signin\" className=\"signbutton__link\"> */}\n                <SignButton type=\"button\" value=\"signin\">\n                  Sign in\n                </SignButton>\n                {/* </a> */}\n              </span>\n            </form>\n          </div>\n        </div>\n        <div className=\"welcome__container-rightpanel\" />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","/Users/ekphrasis/P_CDA/checklist_client/src/pages/Signin.jsx",["199","200","201"],"/* eslint-disable no-shadow */\nimport React, { useState, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin } from '../actions/auth';\n\nimport usePasswordToggle from '../components/customedhooks/usePasswordToggle';\nimport useForm from '../components/customedhooks/useForm';\nimport validate from '../components/validators/validateSignin';\n\nimport WelcomeTopIcon from '../components/layout/WelcomeTopIcon';\nimport SignButton from '../components/buttons/SignButton';\nimport SignButtonDivider from '../components/buttons/SignButtonDivider';\n\nconst Signin = ({ signin, auth: { isAuthenticated } }) => {\n  const [PasswordInputType, ToggleIcon] = usePasswordToggle();\n\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  async function submit() {\n    signin(values);\n  }\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <>\n      {/* {toHome ? <Redirect to=\"/dashboard\" /> : null} */}\n      <div className=\"welcome__container\">\n        <div className=\"welcome__container-leftpanel\">\n          <WelcomeTopIcon />\n          <div className=\"welcome__container-leftpanel-bottomhalf\">\n            <form\n              onSubmit={handleSubmit}\n              noValidate\n              className=\"form__container\"\n            >\n              <h2 className=\"form__container-title\">Welcome back</h2>\n              <label htmlFor=\"email\" className=\"form__container-label\">\n                Email\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"name@domain.com\"\n                    value={values.email}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                </div>\n                {errors.email && <p className=\"error\">{errors.email}</p>}\n              </label>\n              <label htmlFor=\"password\" className=\"form__container-label\">\n                Password\n                <span className=\"required\">*</span>\n                <div>\n                  <input\n                    id=\"password\"\n                    type={PasswordInputType}\n                    name=\"password\"\n                    placeholder=\"at least 8 characters\"\n                    value={values.password}\n                    onChange={handleChange}\n                    className=\"form__container-input\"\n                  />\n                  <span className=\"password-toggle-icon\">{ToggleIcon}</span>\n                </div>\n                {errors.password && <p className=\"error\">{errors.password}</p>}\n              </label>\n              <span className=\"welcome__container-leftpanel-bottomhalf-buttons\">\n                <SignButton type=\"submit\" value=\"signin\">\n                  Sign in\n                </SignButton>\n                <SignButtonDivider />\n                <SignButton type=\"button\" value=\"signup\">\n                  Sign up\n                </SignButton>\n              </span>\n            </form>\n          </div>\n        </div>\n        <div className=\"welcome__container-rightpanel\" />\n      </div>\n    </>\n  );\n};\n\n// Signin.propTypes = {\n//   signin: PropTypes.func.isRequired,\n//   isAuthenticated: PropTypes.bool,\n// };\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { signin })(Signin);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/WelcomeTopIcon.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/usePasswordToggle.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/SignButtonDivider.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/customedhooks/useForm.jsx",["202"],"import { useState, useEffect } from 'react';\n\nconst useForm = (initialState, validate, callback) => {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const clearState = () => {\n    setValues({ ...initialState });\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValues({\n      ...values,\n    });\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors, isSubmitting]);\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    setValues,\n    errors,\n    clearState,\n  };\n};\n\nexport default useForm;\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignup.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateSignin.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/auth.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/index.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/index.js",[],["203","204","205","206","207","208","209"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PublicRoute.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/common/PrivateRoute.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/pages/Dashboard.jsx",["210","211"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Navbar.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddItemButton.jsx",["212","213"],"/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Textarea from 'react-textarea-autosize';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport useForm from '../customedhooks/useForm';\nimport validate from '../validators/validateAddItem';\nimport { addList } from '../../actions/lists';\nimport { addTask } from '../../actions/tasks';\n\nconst AddItemButton = ({\n  listId,\n  list,\n  text,\n  children,\n  addList,\n  addTask,\n  auth,\n  messages,\n}) => {\n  const [formOpen, setFormOpen] = useState(false);\n\n  console.log('eeasy', messages);\n\n  const open = () => {\n    setFormOpen(true);\n  };\n\n  const close = () => {\n    setFormOpen(false);\n  };\n\n  const buttonTextOpacity = text === 'list' ? 1 : 0.5;\n  const buttonTextColor = text === 'list' ? 'white' : 'inherit';\n  const buttonTextBackground = text === 'list' ? '#eeeeee' : 'inherit';\n\n  const placeholder =\n    text === 'list' ? 'Enter new list name' : 'Enter new task name';\n\n  const buttonTitle = text === 'list' ? 'Add List' : 'Add Task';\n\n  // const addListP = addList({ user_id: auth.user.id, name: values.name });\n\n  // const addTaskP = addTask({\n  //   user_id: auth.user.id,\n  //   name: values.name,\n  //   description: 'Description à compléter',\n  //   priority_id: 3,\n  //   list_id: listId,\n  // });\n\n  const initialState = {\n    name: '',\n  };\n\n  const { handleChange, handleSubmit, values, errors, clearState } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  const valueButton = text === 'list' ? 'addList' : 'addTask';\n\n  async function submit() {\n    {\n      (text === 'list'\n        ? addList({ user_id: auth.user.id, name: values.name })\n        : addTask(\n            {\n              user_id: auth.user.id,\n              name: values.name,\n              description: 'Description à compléter',\n              priority_id: 3,\n              list_id: listId,\n            },\n            list\n          )\n      ).then(clearState);\n    }\n  }\n\n  // function refreshPage() {\n  //   window.location.reload();\n  // }\n\n  return (\n    <div\n      style={{\n        opacity: buttonTextOpacity,\n        color: buttonTextColor,\n        background: buttonTextBackground,\n      }}\n      className=\"add-item-background\"\n    >\n      <div className=\"add-item-container\">\n        {formOpen ? (\n          <form\n            onSubmit={handleSubmit}\n            noValidate\n            className=\"add-item-container-form\"\n          >\n            <Textarea\n              placeholder={placeholder}\n              autoFocus\n              className=\"add-item-container-form-input\"\n              onChange={handleChange}\n              // onBlur={close}\n              value={values.name || ''}\n              name=\"name\"\n              id=\"id\"\n              type=\"text\"\n            />\n            {errors.name && <p className=\"error\">{errors.name}</p>}\n            <button\n              type=\"submit\"\n              // value=\"addList\"\n              value={valueButton}\n              className=\"add-item-form-button\"\n              // onClick={() => refreshPage()}\n            >\n              {buttonTitle}\n            </button>\n            <FontAwesomeIcon\n              className=\"add-item-container-form-cross\"\n              icon={faTimes}\n              onMouseDown={close}\n            />\n          </form>\n        ) : (\n          <div className=\"add-item-button\">\n            <button className=\"add-item-buttons\" type=\"button\" onClick={open}>\n              <FontAwesomeIcon icon={faPlus} />\n              &nbsp; Add a new&nbsp;\n              {children}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  messages: state.messages.state,\n});\n\nexport default connect(mapStateToProps, { addList, addTask })(AddItemButton);\n","/Users/ekphrasis/P_CDA/checklist_client/src/store.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/auth.js",["214"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Alerts.jsx",["215"],"import React, { useEffect } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\n\nconst Alerts = ({ error, alert, message }) => {\n  console.log('titit', error);\n  if (error) {\n    if (error.msg) alert.error('There is an error');\n  }\n  // useEffect(() => {\n  //   alert.show('Alert Works');\n  // }, []);\n  return <></>;\n};\nconst mapStateToProps = (state) => ({\n  error: state.errors,\n  message: state.messages,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));\n","/Users/ekphrasis/P_CDA/checklist_client/src/actions/messages.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/types.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/actions/tasks.js",["216","217"],"import axios from 'axios';\nimport { createMessage, returnErrors } from './messages';\nimport { tokenConfig } from './auth';\n\nimport {\n  GET_TASKS,\n  ADD_TASK,\n  EDIT_TASK,\n  DELETE_TASK,\n  CLEAR_TASKS,\n  POST_ERROR,\n} from './types';\n\nconst API = process.env.REACT_APP_DEV_API_URL;\n\n// GET ONLY TASKS FROM AN USER\nexport const getTasks = () => async (dispatch, getState) => {\n  axios\n    .get(`${API}tasks`, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: GET_TASKS,\n        payload: res.data,\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\n// ADD TASK\nexport const addTask = (data) => async (dispatch, getState) => {\n  console.log('taskskssks', data);\n  // Request Body\n  const body = JSON.stringify(data);\n  console.log('data from addlist into body', body);\n  axios\n    .post(`${API}tasks`, body, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: ADD_TASK,\n        payload: res.data,\n      });\n      dispatch(createMessage({ addList: 'Task Added' }));\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n","/Users/ekphrasis/P_CDA/checklist_client/src/actions/lists.js",["218","219"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditTaskModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/EditListModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditList.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/lists.js",["220","221"],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/tasks.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/errors.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/reducers/messages.js",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/NavbarModal.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/EditList.jsx",["222"],"/* eslint-disable consistent-return */\n/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { deleteList } from '../actions/lists';\n\nconst EditListModal = ({ deleteList, listId }) => {\n  console.log('tatayuyu', listId);\n\n  // const history = useHistory();\n\n  async function submit() {\n    // deleteList(listId, history);\n    deleteList(listId);\n  }\n\n  return (\n    <>\n      <div className=\"editlist-modal-box\">\n        <FontAwesomeIcon icon={faTrashAlt} />\n        <p>Do you really want to delete the list?</p>\n        <button type=\"submit\" className=\"delete-item-button\" onClick={submit}>\n          Delete the list\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists.lists,\n});\n\nexport default connect(mapStateToProps, { deleteList })(EditListModal);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddItem.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/List.jsx",["223","224"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/layout/Task.jsx",["225"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/buttons/AddTaskButton.jsx",["226"],"/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateAddTask.jsx",[],"/Users/ekphrasis/P_CDA/checklist_client/src/components/EditTask.jsx",["227"],"/* eslint-disable consistent-return */\n/* eslint-disable no-constant-condition */\n/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\n\nimport useForm from './customedhooks/useForm';\nimport validate from './validators/validateEditTask';\nimport { editTask, deleteTask } from '../actions/tasks';\n\nconst EditTask = ({ tasks, list, auth, editTask, deleteTask, messages }) => {\n  console.log('user', auth);\n  console.log('full list', list);\n  console.log('full tasks', tasks);\n  console.log('lissst id', tasks.list_id);\n  console.log('taesks', tasks.name);\n  const initialState = {\n    id: '' ? '' : tasks.id,\n    name: '' ? '' : tasks.name,\n    description: '' ? '' : tasks.description,\n    priority_id: '' ? '' : tasks.priority_id,\n    list_id: '' ? '' : tasks.list_id,\n  };\n\n  const { handleChange, handleSubmit, values, errors } = useForm(\n    initialState,\n    validate,\n    submit\n  );\n\n  async function submit() {\n    editTask(\n      {\n        user_id: auth.user.id,\n        id: tasks.id,\n        name: values.name,\n        description: values.description,\n        priority_id: values.priority_id,\n        list_id: tasks.list_id,\n      },\n      list\n    );\n  }\n\n  async function submitDelete() {\n    deleteTask(tasks.id, tasks, list);\n  }\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        noValidate\n        className=\"edittask-modal-box-body\"\n      >\n        <label htmlFor=\"name\">\n          Task name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            onChange={handleChange}\n            value={values.name || ''}\n          />\n          {errors.name && <p className=\"error\">{errors.name}</p>}\n        </label>\n        <label htmlFor=\"description\">\n          Task description:\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            className=\"edittask-modal-box-body-form-box\"\n            onChange={handleChange}\n            value={values.description || ''}\n          />\n          {errors.description && <p className=\"error\">{errors.description}</p>}\n        </label>\n        <label htmlFor=\"priority\">\n          Priority:\n          <input\n            type=\"text\"\n            name=\"priority\"\n            id=\"priority\"\n            onChange={handleChange}\n            value={values.priority_id || ''}\n          />\n          {errors.priority_id && <p className=\"error\">{errors.priority_id}</p>}\n        </label>\n        <button type=\"submit\" value=\"editTask\" className=\"edit-items-buttons\">\n          <p>Update the task</p>\n        </button>\n      </form>\n      <div className=\"edittask-modal-box-body-delete\">\n        <span className=\"edittask-modal-box-body-delete-title\">\n          <FontAwesomeIcon icon={faTrashAlt} />\n          <h3>Delete Task</h3>\n        </span>\n        <p>Or do you really want to delete the task permanently?</p>\n        <button\n          type=\"submit\"\n          className=\"delete-item-button\"\n          onClick={submitDelete}\n        >\n          <p>Delete the task</p>\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  messages: state.messages.state,\n});\n\nexport default connect(mapStateToProps, { editTask, deleteTask })(EditTask);\n","/Users/ekphrasis/P_CDA/checklist_client/src/components/validators/validateEditTask.jsx",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":15,"column":8,"nodeType":"244","messageId":"245","endLine":15,"endColumn":14},{"ruleId":"242","severity":1,"message":"246","line":25,"column":47,"nodeType":"244","messageId":"245","endLine":25,"endColumn":56},{"ruleId":"242","severity":1,"message":"247","line":2,"column":27,"nodeType":"244","messageId":"245","endLine":2,"endColumn":33},{"ruleId":"242","severity":1,"message":"248","line":16,"column":10,"nodeType":"244","messageId":"245","endLine":16,"endColumn":16},{"ruleId":"242","severity":1,"message":"249","line":16,"column":18,"nodeType":"244","messageId":"245","endLine":16,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":34,"column":6,"nodeType":"252","endLine":34,"endColumn":28,"suggestions":"253"},{"ruleId":"228","replacedBy":"254"},{"ruleId":"230","replacedBy":"255"},{"ruleId":"232","replacedBy":"256"},{"ruleId":"234","replacedBy":"257"},{"ruleId":"236","replacedBy":"258"},{"ruleId":"238","replacedBy":"259"},{"ruleId":"240","replacedBy":"260"},{"ruleId":"242","severity":1,"message":"261","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":25},{"ruleId":"250","severity":1,"message":"262","line":79,"column":6,"nodeType":"252","endLine":79,"endColumn":8,"suggestions":"263"},{"ruleId":"242","severity":1,"message":"264","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":18},{"ruleId":"265","severity":1,"message":"266","line":68,"column":5,"nodeType":"267","messageId":"268","endLine":82,"endColumn":6},{"ruleId":"242","severity":1,"message":"269","line":11,"column":3,"nodeType":"244","messageId":"245","endLine":11,"endColumn":13},{"ruleId":"242","severity":1,"message":"270","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"271","line":14,"column":3,"nodeType":"244","messageId":"245","endLine":14,"endColumn":14},{"ruleId":"242","severity":1,"message":"272","line":15,"column":3,"nodeType":"244","messageId":"245","endLine":15,"endColumn":13},{"ruleId":"242","severity":1,"message":"273","line":12,"column":3,"nodeType":"244","messageId":"245","endLine":12,"endColumn":14},{"ruleId":"242","severity":1,"message":"272","line":13,"column":3,"nodeType":"244","messageId":"245","endLine":13,"endColumn":13},{"ruleId":"242","severity":1,"message":"274","line":99,"column":9,"nodeType":"244","messageId":"245","endLine":99,"endColumn":25},{"ruleId":"242","severity":1,"message":"275","line":100,"column":9,"nodeType":"244","messageId":"245","endLine":100,"endColumn":23},{"ruleId":"242","severity":1,"message":"261","line":3,"column":17,"nodeType":"244","messageId":"245","endLine":3,"endColumn":25},{"ruleId":"242","severity":1,"message":"264","line":6,"column":10,"nodeType":"244","messageId":"245","endLine":6,"endColumn":18},{"ruleId":"250","severity":1,"message":"276","line":72,"column":6,"nodeType":"252","endLine":72,"endColumn":8,"suggestions":"277"},{"ruleId":"242","severity":1,"message":"261","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":25},{"ruleId":"242","severity":1,"message":"264","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":18},{"ruleId":"242","severity":1,"message":"261","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":25},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"lines-around-directive",["280"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Alerts' is defined but never used.","Identifier","unusedVar","'setValues' is assigned a value but never used.","'useRef' is defined but never used.","'toHome' is assigned a value but never used.","'setToHome' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["281"],["278"],["279"],["280"],[],[],[],[],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.user.id', 'getLists', 'getListsTasks', and 'getTasks'. Either include them or remove the dependency array. If 'getLists' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["282"],"'Redirect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'GET_ERRORS' is defined but never used.","'useEffect' is defined but never used.","'CLEAR_TASKS' is defined but never used.","'POST_ERROR' is defined but never used.","'CLEAR_LISTS' is defined but never used.","'droppableIdStart' is assigned a value but never used.","'droppableIdEnd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.user.id' and 'getListsTasks'. Either include them or remove the dependency array. If 'getListsTasks' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["283"],"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"290","text":"291"},"Update the dependencies array to be: [auth.user.id, getLists, getListsTasks, getTasks]",{"range":"292","text":"293"},"Update the dependencies array to be: [auth.user.id, getListsTasks]",{"range":"294","text":"295"},[758,780],"[callback, errors, isSubmitting]",[2109,2111],"[auth.user.id, getLists, getListsTasks, getTasks]",[2033,2035],"[auth.user.id, getListsTasks]"]